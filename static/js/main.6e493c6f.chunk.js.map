{"version":3,"sources":["constants.js","components/Question.js","App.js","reportWebVitals.js","index.js"],"names":["QUESTION_TYPES","QUESTIONS","question","answers","type","pictures","ANSWERS","name","description","Question","onInputChange","e","target","value","props","setCanClickNext","this","className","onChange","map","picture","onClick","src","alt","answer","Component","App","setState","canClickNext","onNextClick","page","state","onTakeQuizAgainClick","questions","getRandomizedQuestions","sort","Math","random","slice","randomIndex","floor","length","randomAnswer","currentQuestionIndex","disabled","renderAnswer","renderContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAAaA,G,MACF,WADEA,EAEL,OAGKC,EAAY,CACvB,CACEC,SAAU,iDACVC,QAAS,CACP,uBACA,gDACA,gCACA,mBAGJ,CACED,SAAU,4DACVC,QAAS,CACP,KACA,iEACA,gGACA,mFAGJ,CACED,SAAU,6DACVC,QAAS,CACP,iGACA,sHACA,+FACA,qGAGJ,CACED,SAAU,iDACVC,QAAS,CACP,gCACA,uBACA,kBACA,4FAGJ,CACED,SAAU,kDACVC,QAAS,CACP,oEACA,eACA,QACA,cAGJ,CACED,SAAU,qDACVC,QAAS,CACP,QACA,+CACA,uBACA,6RAGJ,CACED,SAAU,aACVC,QAAS,CACP,8EACA,4CACA,6BACA,iFAGJ,CACED,SAAU,kBACVC,QAAS,CACP,4GACA,qGACA,qHACA,kKAGJ,CACED,SAAU,mBACVC,QAAS,CACP,0GACA,0GACA,wDACA,uHAGJ,CACED,SAAU,OACVC,QAAS,CACP,aACA,UACA,UACA,WAGJ,CACED,SAAU,+BACVC,QAAS,CACP,qDACA,yDACA,0CACA,sGAGJ,CACED,SAAU,mDACVC,QAAS,CACP,kEACA,kBACA,uDACA,2BAGJ,CACED,SAAU,uEACVC,QAAS,CACP,wHACA,oEACA,qEACA,kDAGJ,CACED,SAAU,QACVC,QAAS,CACP,UAGJ,CACED,SAAU,MACVC,QAAS,CACP,MACA,MACA,MACA,QAGJ,CACED,SAAU,oBACVC,QAAS,CACP,mBACA,kCACA,YACA,kDAGJ,CACED,SAAU,iGACVC,QAAS,CACP,6BACA,kEACA,eACA,QAGJ,CACED,SAAU,4BACVC,QAAS,CACP,6CACA,0CACA,2DACA,8DAGJ,CACED,SAAU,gCACVC,QAAS,CACP,iBACA,uBACA,WACA,mEAGJ,CACEC,KAAMJ,EACNE,SAAU,qEACVG,SAAU,CACR,gBACA,gBACA,gBACA,kBAGJ,CACED,KAAMJ,EACNE,SAAU,qCACVG,SAAU,CACR,YACA,YACA,YACA,cAGJ,CACED,KAAMJ,EACNE,SAAU,aAEZ,CACEE,KAAMJ,EACNE,SAAU,4CAEZ,CACEE,KAAMJ,EACNE,SAAU,2DAEZ,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","file":"static/js/main.6e493c6f.chunk.js","sourcesContent":["export const QUESTION_TYPES = {\n  picture: 'picture',\n  text: 'text',\n}\n\nexport const QUESTIONS = [\n  {\n    question: 'How would you like your existence to manifest?',\n    answers: [\n      'Dunno, m just a cave',\n      'As a human body solely to consume food I like',\n      'A disembodied spirit of sorts',\n      'A surreal meme',\n    ],\n  },\n  {\n    question: 'How do you feel about the physical touch of other humans?',\n    answers: [\n      'No',\n      'How to sleep with cis men but not deal with toxic masculinity?',\n      'I mostly forget I have sexual/physical needs but am surprised when I encounter them and enjoy',\n      'I can deal with a hug every now and then from a very specific subset of people',\n    ],\n  },\n  {\n    question: 'How do you think we can achieve collective social justice?',\n    answers: [\n      'Kill and compost the billionaires. Re-purpose their organic matter as manure to regrow forests',\n      'Create an eco-commune with my friends in the remote woods built around the principles of non-extractivist practices',\n      'Build an anarchist movement of humans and animals to dismantle fascism through sheer numbers',\n      'Fight on the ground for three or four decades, give up, read in my room for the rest of eternity',\n    ],\n  },\n  {\n    question: 'How do you feel about being a part of society?',\n    answers: [\n      'I just want platonic kinships',\n      'I just want teh peng',\n      'I just want cat',\n      'I just want to drive to Ezra Koenig songs and weep about why anyone and anything exists',\n    ],\n  },\n  {\n    question: 'What is your relationship to non-human animals?',\n    answers: [\n      'Crucial bio-ecological players, but just not in my personal space',\n      'I like Pingu',\n      'BEES?',\n      'Fuck bugs',\n    ],\n  },\n  {\n    question: 'Pick a question that resonates with you right now.',\n    answers: [\n      'WASP?',\n      'If I had to pick, am I more Korra or Katara?',\n      'Should I eat or nap?',\n      \"How do I know if I'm actively unlearning my toxic behaviours and conditioned patterns, instead of replicating them especially when I'm in a position of structural power, given that these are perpetually fluid geopolitical and contextual states of being, without exhausting myself?\",\n    ],\n  },\n  {\n    question: 'Pick a Kav',\n    answers: [\n      'Kav drinking hot water while her smoker friends smoke near the Cendana gate',\n      'Kav dancing to 80s music in a funky shirt',\n      'Kav getting into astrology',\n      'Kav getting super excited by the knowledge of new carbon-trapping ecosystems',\n    ],\n  },\n  {\n    question: 'Pick a fun mood',\n    answers: [\n      'First few months of lockdown solitudinous bliss, devouring books in my room in Delhi, being fed good food',\n      'Playing gin rummy for 3 hours straight in a Taiwanese 7/11 after a whole day of farming in the sun',\n      'Driving along the coastal roads of Hawaii while everyone is asleep in the car: window down, blue seas, music, awe.',\n      'Downing a bottle of Malibu and finishing a pack of Marlboro reds in an RC4 skygarden, revelling in the feeling of being 18 and the NRE of freshie friendships',\n    ],\n  },\n  {\n    question: 'Pick a shit mood',\n    answers: [\n      'Dealing with caste-ist relatives at family gatherings where they all speculate on my matrimonial future',\n      'Lugging too much furniture a few dozen times up and down three flights of stairs when moving apartments',\n      'Encountering toxic pseudo-woke men in activist spaces',\n      'Seeing the vegetarian offerings at the dining hall and walking to Utown to nourish myself, for four years straight',\n    ],\n  },\n  {\n    question: 'Why?',\n    answers: [\n      'Jigglypuff',\n      'Mr Mime',\n      'Psyduck',\n      'Oddish',\n    ],\n  },\n  {\n    question: 'When do you feel most loved?',\n    answers: [\n      'Someone sending me surprise food during quarantine',\n      'Drinking chilled red wine in a dorm room, watching HSM',\n      'Getting a rambling letter from a friend',\n      'Smokin a j and floating above my bed in the dark, in a realm where the corporeal no longer exists',\n    ],\n  },\n  {\n    question: 'Who would be your companion if you were a witch?',\n    answers: [\n      \"A sloth that just, like, totally gets you and what you're about\",\n      'Phoebe Bridgers',\n      'A sassy cauldron that brews you gin at 5 pm everyday',\n      'A glitch in the matrix',\n    ],\n  },\n  {\n    question: 'If all your friends became hawks, what would your first reaction be?',\n    answers: [\n      'FUCK FUCK all my friends became FUCKING HAWKS. WHAT THE ACTUAL FUCK THIS IS REAL LIFE, NOT SOME FUCKING FANTASY STORY',\n      'Gosh, my dreams are getting scarily real… haha… haha...',\n      'Friends, are you okay??? *gesture* Squawk squawk? *bigger gesture*',\n      'Well, guess I gotta figure out what hawks eat',\n    ],\n  },\n  {\n    question: 'Wombo',\n    answers: [\n      'Combo',\n    ],\n  },\n  {\n    question: '???',\n    answers: [\n      '...',\n      '!!!',\n      '???',\n      '+++',\n    ],\n  },\n  {\n    question: 'What is scariest?',\n    answers: [\n      'Being vulnerable',\n      'Crashing on a bike in Lake Toba',\n      'Pregnancy',\n      'The idea that anything we try will be in vain',\n    ],\n  },\n  {\n    question: 'You’re at a party. You’ve got to make conversation with some scrub. What do you say?',\n    answers: [\n      'How are The Shins so good?',\n      'Are you a virgin? No, fuck, I mean, have you seen Rocky Horror?',\n      'Wanna smonk?',\n      'Hey',\n    ],\n  },\n  {\n    question: 'Anyways, enough about me.',\n    answers: [\n      'Random thing I learned about earlier today',\n      'Broad question about your life recently',\n      'Compliment about some change you made in your appearance',\n      'Specific question I have been saving just for this moment',\n    ],\n  },\n  {\n    question: 'When I grow up, I want to be:',\n    answers: [\n      'A flower queen',\n      'Pshhh grow up pshhhh',\n      'Kool kat',\n      'A consult- sorry I couldn’t say that with a straight face',\n    ],\n  },\n  {\n    type: QUESTION_TYPES.picture,\n    question: 'Which one currently resembles the landscape of your word-energies?',\n    pictures: [\n      'collage_1.png',\n      'collage_2.png',\n      'collage_3.png',\n      'collage_4.png',\n    ],\n  },\n  {\n    type: QUESTION_TYPES.picture,\n    question: 'What air quality do you feel like?',\n    pictures: [\n      'air_1.png',\n      'air_2.png',\n      'air_3.png',\n      'air_4.png',\n    ],\n  },\n  {\n    type: QUESTION_TYPES.text,\n    question: 'Check-in?',\n  },\n  {\n    type: QUESTION_TYPES.text,\n    question: 'What is your favorite thing about Kavya?',\n  },\n  {\n    type: QUESTION_TYPES.text,\n    question: 'Who is your celebrity crush? Any type of crush accepted',\n  },\n  {\n    question: 'What would be your death row meal?',\n    answers: [\n      'Poha',\n      'Black beans and guac and chips',\n      'Bubble tea from Koi',\n      'The best margherita pizza ever',\n    ],\n  },\n]\n\nexport const ANSWERS = [\n  {\n    name: 'Kavya explaning libras to libras',\n    description: 'A Sisyphean task. You embrace futility.',\n  },\n  {\n    name: 'Kavya oscillating between being an anarchist and being a librarian',\n    description: 'You can be both. It will sometimes prove to be challenging. Fuck binaries.',\n  },\n  {\n    name: 'Slug bot',\n    description: 'Beep bop boop. Splat.',\n  },\n  {\n    name: 'Angry pingu',\n    description: 'Noot noot you fuck',\n  },\n  {\n    name: 'A deep body of water',\n    description: 'Terrifying. Beautiful, but terrifying',\n  },\n  {\n    name: 'Romantic relationship regrets',\n    description: 'You are universal and will haunt people till the end of their pitiless existences',\n  },\n  {\n    name: 'Kav biking',\n    description: 'You are free and zooming and wonderful',\n  },\n  {\n    name: 'Kav trying to tell you a secret',\n    description: \"Hypothetically, you're hypothetically hypothetical. In a hypothetical sense\",\n  },\n  {\n    name: 'A cat',\n    description: 'Shocker',\n  },\n  {\n    name: \"Kavya's relationship to Love Actually\",\n    description: 'Confusing to your friends but oddly charming',\n  },\n  {\n    name: \"Kav's stationery\",\n    description: 'You are loved and perhaps a bit boujee, but well-deserved, so KEEP IT UP',\n  },\n  {\n    name: 'Kavya on a video call',\n    description: \"You are getting sleepier and sleepier, aren't you? Just go to bed already.\",\n  },\n  {\n    name: 'Kavya',\n    description: \"You are an absolutely amazing person who has made everyone around you better. You don't give yourself any credit and that's fucked up. You are SO LOVED\",\n  },\n  {\n    name: 'Catholic',\n    description: \"Sorry! You're Catholic! Have fun with marriage!\",\n  },\n  {\n    name: 'Pear vodka',\n    description: 'You burn',\n  },\n  {\n    name: 'A hack',\n    description: 'You are the reason the world is so beautiful',\n  },\n  {\n    name: 'A scam',\n    description: 'Fuck off',\n  },\n  {\n    name: 'An egg',\n    description: \"You're kinda just there. Neutral good.\",\n  },\n]\n\nexport const QUESTION_COUNT = 8;\n","import { Component } from 'react';\n\nimport { QUESTION_TYPES } from '../constants';\n\nclass Question extends Component {\n  onInputChange = (e) => {\n    if (e.target.value === '') {\n      this.props.setCanClickNext(false);\n    }\n    else {\n      this.props.setCanClickNext();\n    }\n  }\n\n  answers() {\n    if (this.props.type === QUESTION_TYPES.text) {\n      return (\n        <div>\n          <input className='textInput' type='text' key={this.props.question} onChange={this.onInputChange} />\n        </div>\n      );\n    }\n\n    if (this.props.type === QUESTION_TYPES.picture) {\n      return (\n        <div>\n          {this.props.pictures.map(picture =>\n            <div className='pictureWrapper' key={picture}>\n              <label>\n                <input onClick={this.props.setCanClickNext} className='radioButton' type='radio' name='hello' value={picture} />\n                <img className='picture' src={picture} alt='answer' />\n              </label>\n            </div>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {\n          this.props.answers.map(answer =>\n            <div className='answer' key={answer}>\n              <label>\n                <input onClick={this.props.setCanClickNext} className='radioButton' type='radio' name='hello' value={answer} />{answer}\n              </label>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='question'>{this.props.question}</div>\n        {this.answers()}\n      </div>\n    );\n  }\n}\n\nexport default Question;\n\n","import { Component } from 'react';\n\nimport './App.css';\n\nimport Question from './components/Question';\nimport { ANSWERS, QUESTION_COUNT, QUESTIONS } from './constants';\n\nclass App extends Component {\n  getRandomizedQuestions() {\n    const shuffledQuestions = QUESTIONS.sort(() => 0.5 - Math.random());\n\n    return shuffledQuestions.slice(QUESTION_COUNT);\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = { page: 0, canClickNext: true, questions: this.getRandomizedQuestions() };\n  }\n\n  setCanClickNext = (value=true) => {\n    this.setState({ canClickNext: !!value });\n  }\n\n  onNextClick = () => {\n    this.setState({ page: this.state.page + 1, canClickNext: false, });\n  }\n\n  onTakeQuizAgainClick = () => {\n    this.setState({ page: 1, questions: this.getRandomizedQuestions() });\n  }\n\n  renderAnswer() {\n    const randomIndex = Math.floor(Math.random() * ANSWERS.length)\n      , randomAnswer = ANSWERS[randomIndex]\n      ;\n\n    return (\n      <div>\n        Your result:\n        <h2>{randomAnswer.name}</h2>\n        {randomAnswer.description}\n      </div>\n    );\n  }\n\n  renderContent() {\n    const currentQuestionIndex = this.state.page - 1;\n\n    // beginning\n    if (this.state.page === 0) {\n      return (\n        <div className='titlePage'>\n          <h1>The Kavya Quarterly</h1>\n          <p className='explanation'>\n            As some of our more loyal readers may know, we have a tradition here at kavyagopal.com. Every 25 years, we take the day off from our usual tasks and sit down to make our quarterly quiz. It's been a long 25 years, and a lot has changed since 1995, but our tradition holds strong.\n            <br /><br />This year's theme: Kavya\n          </p>\n          <button onClick={this.onNextClick}>\n            Take Quiz\n          </button>\n        </div>\n      );\n    }\n\n    if (currentQuestionIndex < QUESTION_COUNT) {\n      const props = this.state.questions[currentQuestionIndex];\n\n      return (\n        <div>\n          <Question setCanClickNext={this.setCanClickNext} {...props} />\n          <button className='nextButton' disabled={!this.state.canClickNext} onClick={this.onNextClick}>Next</button>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {this.renderAnswer()}\n        <button className='nextButton' onClick={this.onTakeQuizAgainClick}>\n          Take the quiz again\n        </button>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className='wrapper'>\n        {this.renderContent()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}